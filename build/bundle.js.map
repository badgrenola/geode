{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../src/components/Header.svelte","../../src/components/DropZone.svelte","../../node_modules/svelte/store/index.mjs","../../src/processor/GeodeProcessorState.js","../../src/stores/GeodeStore.js","../../src/components/StartScreen.svelte","../../src/stores/GeodeBandStore.js","../../src/components/Spinner.svelte","../../src/components/BandSelector/BandSelector.svelte","../../src/helpers/jsHelpers.js","../../src/stores/GeodeMetadataStore.js","../../src/components/MetadataView/MetadataItem.svelte","../../src/components/MetadataView/MetadataKeySection.svelte","../../src/components/MetadataView/MetadataView.svelte","../../node_modules/rollup-plugin-web-worker-loader/src/WorkerLoaderHelper.js","../../src/processor/GeodeProcessor.js","../../src/App.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value' || descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group) {\n    const value = [];\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.push(group[i].__value);\n    }\n    return value;\n}\nfunction to_number(value) {\n    return value === '' ? undefined : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            let j = 0;\n            while (j < node.attributes.length) {\n                const attribute = node.attributes[j];\n                if (attributes[attribute.name]) {\n                    j++;\n                }\n                else {\n                    node.removeAttribute(attribute.name);\n                }\n            }\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.data !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    if (value != null || input.value) {\n        input.value = value;\n    }\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\nfunction add_resize_listener(element, fn) {\n    if (getComputedStyle(element).position === 'static') {\n        element.style.position = 'relative';\n    }\n    const object = document.createElement('object');\n    object.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; pointer-events: none; z-index: -1;');\n    object.setAttribute('aria-hidden', 'true');\n    object.type = 'text/html';\n    object.tabIndex = -1;\n    let win;\n    object.onload = () => {\n        win = object.contentDocument.defaultView;\n        win.addEventListener('resize', fn);\n    };\n    if (/Trident/.test(navigator.userAgent)) {\n        element.appendChild(object);\n        object.data = 'about:blank';\n    }\n    else {\n        object.data = 'about:blank';\n        element.appendChild(object);\n    }\n    return {\n        cancel: () => {\n            win && win.removeEventListener && win.removeEventListener('resize', fn);\n            element.removeChild(object);\n        }\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(html, anchor = null) {\n        this.e = element('div');\n        this.a = anchor;\n        this.u(html);\n    }\n    m(target, anchor = null) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(target, this.n[i], anchor);\n        }\n        this.t = target;\n    }\n    u(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    p(html) {\n        this.d();\n        this.u(html);\n        this.m(this.t, this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = node.ownerDocument;\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = doc.head.appendChild(element('style')).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ``}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error(`Function called outside component initialization`);\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            info.blocks[i] = null;\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\n\nconst globals = (typeof window !== 'undefined' ? window : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next, lookup.has(block.key));\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error(`Cannot have duplicate keys in a keyed each`);\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += \" \" + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += \" \" + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${String(value).replace(/\"/g, '&#34;').replace(/'/g, '&#39;')}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : ``;\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    // onMount happens before the initial afterUpdate\n    add_render_callback(() => {\n        const new_on_destroy = on_mount.map(run).filter(is_function);\n        if (on_destroy) {\n            on_destroy.push(...new_on_destroy);\n        }\n        else {\n            // Edge case - component was destroyed immediately,\n            // most likely as a result of a binding initialising\n            run_all(new_on_destroy);\n        }\n        component.$$.on_mount = [];\n    });\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const prop_values = options.props || {};\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, prop_values, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if ($$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set() {\n            // overridden by instance, if it has props\n        }\n    };\n}\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set() {\n        // overridden by instance, if it has props\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.20.1' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev(\"SvelteDOMRemove\", { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? [\"capture\"] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev(\"SvelteDOMAddEventListener\", { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev(\"SvelteDOMRemoveEventListener\", { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev(\"SvelteDOMRemoveAttribute\", { node, attribute });\n    else\n        dispatch_dev(\"SvelteDOMSetAttribute\", { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev(\"SvelteDOMSetProperty\", { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev(\"SvelteDOMSetDataset\", { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.data === data)\n        return;\n    dispatch_dev(\"SvelteDOMSetData\", { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(`'target' is a required option`);\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn(`Component was already destroyed`); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error(`Infinite loop detected`);\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","<script>\n  export let onLoadButtonPressed\n</script>\n\n<div class=\"flex flex-row h-12 bg-teal-800 pl-3 items-center justify-between\">\n  <h1 id=\"geodeTitle\" class=\"flex-1 text-gray-100 text-3xl\">Geode</h1>\n  <button\n    type=\"button\"\n    class=\"h-full w-12 flex justify-center sm:p outline-none focus:outline-none\n    sm:opacity-75 hover:opacity-100\"\n    on:click={onLoadButtonPressed}>\n    <img src=\"images/loadIcon.svg\" alt=\"Load\" class=\"w-6 h-6\" />\n  </button>\n</div>\n","<script context=\"module\">\n  //Setup the methods for click/file select\n  export const showFileBrowser = e => {\n\n    //We can show the file browser. \n    e.preventDefault()\n    e.stopPropagation()\n\n    //Get the hidden input and click\n    document.getElementById('hiddenFileInput').click()\n  }\n</script>\n\n<script>\n  //Setup the props\n  export let loading = false\n  export let errorMessage = null\n  export let onFileSelected = null\n  export let allowedType = 'image/tiff'\n\n  let fileNotValid = false\n\n  //Setup the internal state\n  let isDropping = false\n\n  //Helper function to prevent event defaults/bubbling\n  const preventDefaults = e => {\n    e.preventDefault()\n    e.stopPropagation()\n  }\n\n  const fileSelected = e => {\n    preventDefaults(e)\n\n    //If a file was chosen, run the callback\n    if (e.target.files.length) {\n      if (onFileSelected) {\n        onFileSelected(e.target.files[0])\n      }\n    }\n  }\n\n  const setIsDroppingFromEvent = (e, state) => {\n    preventDefaults(e)\n\n    //Don't do anything if we're already loading\n    if (loading) {\n      return\n    }\n\n    //Update state\n    isDropping = state\n  }\n\n  //Define the drag/drop events\n  const onDragEnter = e => {\n    setIsDroppingFromEvent(e, true)\n  }\n\n  const onDragOver = e => {\n    setIsDroppingFromEvent(e, true)\n  }\n\n  const onDragLeave = e => {\n    setIsDroppingFromEvent(e, false)\n  }\n\n  const onDrop = e => {\n\n    //Update states\n    setIsDroppingFromEvent(e, false)\n    fileNotValid = false\n\n    //Ensure file is a tiff\n    if (e.dataTransfer.files[0].type == allowedType) {\n      if (onFileSelected) {\n        onFileSelected(e.dataTransfer.files[0])\n      }\n    } else {\n      fileNotValid = true\n    }\n  }\n\n  //Update the dropzone style depending on whether we're in process of dropping/already have a file\n  let dropzoneClasses = null\n  $: {\n    dropzoneClasses = 'w-full h-full pointer-events-none'\n    if (errorMessage || (fileNotValid && !isDropping)) {\n      dropzoneClasses += ' border-dashed border-4 border-red-500'\n    } else if (isDropping) {\n      dropzoneClasses += ' border-dashed border-4 border-green-500'\n    }\n  }\n</script>\n\n<svelte:window\n  on:dragenter={onDragEnter}\n  on:dragover={onDragOver}\n  on:dragleave={onDragLeave}\n  on:drop={onDrop} />\n<div\n  class=\"w-full h-full absolute z-10 pointer-events-none\" draggable=\"true\">\n  <input\n    id=\"hiddenFileInput\"\n    type=\"file\"\n    class=\"hidden\"\n    on:change={fileSelected}\n    accept={allowedType} />\n  <div class={dropzoneClasses}>\n    <div class=\"relative w-full h-full\">\n      <div\n        class=\"absolute top-0 w-full h-full {isDropping ? ' bg-gray-100 opacity-75' : ''}\" />\n      {#if isDropping}\n        <slot name=\"dropping\" />\n      {/if}\n    </div>\n  </div>\n  <div class=\"w-full h-full flex flex-col overflow-hidden relative\">\n    {#if errorMessage}\n      <slot name=\"error\" />\n    {:else if fileNotValid}\n      <slot name=\"fileNotValid\" />\n    {:else if !isDropping}\n      <slot name=\"start\" />\n    {/if}\n  </div>\n</div>\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal';\nexport { get_store_value as get } from '../internal';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe,\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = [];\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (let i = 0; i < subscribers.length; i += 1) {\n                    const s = subscribers[i];\n                    s[1]();\n                    subscriber_queue.push(s, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.push(subscriber);\n        if (subscribers.length === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            const index = subscribers.indexOf(subscriber);\n            if (index !== -1) {\n                subscribers.splice(index, 1);\n            }\n            if (subscribers.length === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","const GeodeProcessorState = {\n  IDLE: 0,\n  HEADER_LOAD: 1,\n}\n\nexport { GeodeProcessorState }","import { writable } from 'svelte/store'\nimport { GeodeProcessorState } from '../processor/GeodeProcessorState'\n\n/*\n\nGeodeStore contains : \n* file - original file object gathered through DnD or load dialog\n* loading - boolean that defines whether the app is currently processing a file\n* rawData - all the raw field data\n\n*/\n\nconst geodeStoreDefaults = {\n  file: null,\n  processorState: GeodeProcessorState.IDLE,\n  rawData: null\n}\n\nconst createGeodeStore = () => {\n  const { subscribe, set, update } = writable(geodeStoreDefaults);\n  \n  const updateWrapper = (field, value) => {\n    update(state => {\n      //Update the value\n      state[field] = value\n\n      //Return the updated state\n      return state\n    })\n  }\n\n\treturn {\n    subscribe,\n    setFile: (data) => updateWrapper('file', data),\n    setProcessorState: (data) => updateWrapper('processorState', data),\n    setRawData: (data) => updateWrapper('rawData', data),\n\t\treset: () => set({\n      file: null,\n      rawData: null\n    })\n\t};\n}\n\nexport const GeodeStore = createGeodeStore();","<script>\n\n  import { GeodeStore } from '../stores/GeodeStore'\n\n  //Get the interaction text\n  let interactionMessage = ''\n  let isMobile =\n    'ontouchstart' in window ||\n    navigator.MaxTouchPoints > 0 ||\n    navigator.msMaxTouchPoints > 0\n  $: {\n    const mobile = `Click the load icon above to browse for ${\n      $GeodeStore.file ? 'another' : 'a'\n    } file on your device`\n    const desktop = `Drag ${\n      $GeodeStore.file ? 'another' : 'a'\n    } Tiff file into this window, or click the load icon above to browse`\n    interactionMessage = isMobile ? mobile : desktop\n  }\n</script>\n\n<p class=\"w-full h-full p-12 flex justify-center items-center text-center text-gray-900 font-light\">{interactionMessage}</p>","import { GeodeStore } from '../stores/GeodeStore.js'\nimport { derived, writable } from 'svelte/store'\n\n/*\n\nGeodeBandStore derives from rawHeader, contains : \n* bandCount - the total number of bands (IFDs) available in the file\n* currentBandIndex - the currently displayed/active band index\n\n*/\n\n//Setup a writable store for the current index value\nconst CurrentBandIndex = writable(0)\n\n//Create a custom store which combines values derived from the main GeodeStore, and the CurrentBandIndex with an update function\nconst createGeodeBandStore = () => {\n\n  //Setup the derived store\n  const { subscribe } = derived(\n    [CurrentBandIndex, GeodeStore],\n    ([$CurrentBandIndex, $GeodeStore], set) => {\n\n      //Update the derived store based on current band index/geode store \n      const bandCount =\n        $GeodeStore.rawData !== null ? $GeodeStore.rawData.ifds.length : null\n      set({\n        bandCount,\n        currentBandIndex: $CurrentBandIndex,\n      })\n    }\n  )\n\n  //Return a custom store with the derived values AND a method to update the CurrentBandIndex\n  return {\n    subscribe,\n    setBandIndex: (newIndex) => {\n      CurrentBandIndex.update((n) => newIndex)\n    },\n  }\n}\n\nexport const GeodeBandStore = createGeodeBandStore()\n","<script>\n  export let size;\n</script>\n\n<style>\n  @keyframes spinner {\n    to {\n      transform: rotate(360deg);\n    }\n  }\n\n  .spinner:before {\n    content: '';\n    box-sizing: border-box;\n    width: 100%;\n    height: 100%;\n    position: absolute;\n    border-radius: 50%;\n    border: 2px solid #ccc;\n    border-top-color: #234e52;\n    animation: spinner 0.6s linear infinite;\n  }\n\n</style>\n\n<span class=\"spinner relative w-{size} h-{size}\" />","<script>\n  import { GeodeBandStore } from '../../stores/GeodeBandStore'\n  import Spinner from '../Spinner.svelte'\n</script>\n\n<div class=\"p-3 pr-0 flex flex-shrink-0 items-center border-b h-12 select-none\">\n  <span class=\"flex-1 font-semibold text-teal-700 text-sm\">Image Bands</span>\n  {#if $GeodeBandStore.bandCount}\n    <div class=\"flex items-center text-xs\">\n      <button\n        type=\"button\"\n        class=\"w-10 h-10 flex justify-center text-lg text-gray-700\n        hover:text-teal-700 focus:outline-none {$GeodeBandStore.currentBandIndex === 0 ? 'pointer-events-none cursor-default opacity-25' : ''}\"\n        on:click={GeodeBandStore.setBandIndex($GeodeBandStore.currentBandIndex - 1)}>\n        ◀\n      </button>\n      <span class=\"\">\n        {$GeodeBandStore.currentBandIndex + 1} / {$GeodeBandStore.bandCount}\n      </span>\n      <button\n        type=\"button\"\n        class=\"w-10 h-10 flex justify-center text-lg text-gray-700\n        hover:text-teal-700 focus:outline-none {$GeodeBandStore.currentBandIndex === $GeodeBandStore.bandCount - 1 ? 'pointer-events-none cursor-default opacity-25' : ''}\"\n        on:click={GeodeBandStore.setBandIndex($GeodeBandStore.currentBandIndex + 1)}>\n        ▶\n      </button>\n    </div>\n  {:else}\n    <div class=\"flex-1 h-full flex flex-shrink-0 justify-end items-center pr-3\">\n      <Spinner size={4}/>\n    </div>\n  {/if}\n</div>\n","const range = (length) => [...Array(length).keys()]\n\nconst roundToDP = (num, dp) => {\n  const divisor = Math.pow(10, dp)\n  return Math.round((num + Number.EPSILON) * divisor) / divisor\n}\n\nconst toPrecision = (x, p) => {\n  return Number.parseFloat(x).toPrecision(p);\n}\n\nconst reduceTotal = (valuesArray) => {\n  return valuesArray.reduce((total, value) => total + value)\n}\n\nconst bytesToMB = (sizeInBytes) => {\n  return roundToDP(sizeInBytes / 1000 / 1000, 2)\n}\n\nconst isObject = value => {\n  return value && typeof value === 'object' && value.constructor === Object\n}\n\nexport { bytesToMB, range, roundToDP, toPrecision, reduceTotal, isObject }","import { GeodeStore } from '../stores/GeodeStore.js'\nimport { derived, get } from 'svelte/store'\nimport { toPrecision, isObject } from '../helpers/jsHelpers'\n\n/*\n\nGeodeMetadataStore derives from rawHeader, contains : \n* ifdFields - nicely formatted field information for the metadata items list, including short-strings/formatted data for display, grouped by IFD\n\n*/\n\nconst geodeMetadataStoreDefaults = {\n  ifdFields: null,\n}\n\n//Process the rawData from the GeodeStore into data usable by the Metadata Panel\nconst processData = (rawData, set) => {\n  //If data isn't preseent set to default\n  if (!rawData) {\n    set(geodeMetadataStoreDefaults)\n    return\n  }\n\n  //We have the data.\n  const ifdFields = processFields(rawData)\n\n  //Set the results\n  set({\n    ifdFields,\n  })\n}\n\n//Process the rawData from the GeodeStore into ifd field data displayed in a list in the metadata panel\nconst processFields = (rawData) => {\n  return rawData.ifds.map((ifd) => {\n    //Split into Image, Structure, Geo and Other Section\n    const imageIDs = [256, 257, 258, 277, 262]\n    const structureIDs = [259, 284, 322, 323, 324, 325, 317, 339]\n    const geoTiffIDs = [33550, 33922, 34264, 42112, 42113]\n\n    const imageFields = ifd.fields.filter((field) =>\n      imageIDs.includes(field.id)\n    )\n    const structureFields = ifd.fields.filter((field) =>\n      structureIDs.includes(field.id)\n    )\n    const geoFields = ifd.fields.filter((field) => field.isGeoKey || geoTiffIDs.includes(field.id) )\n    const otherFields = ifd.fields.filter(\n      (field) =>\n        !field.isGeoKey &&\n        !geoTiffIDs.includes(field.id) &&\n        !imageIDs.includes(field.id) &&\n        !structureIDs.includes(field.id)\n    )\n\n    return {\n      image: processFieldSection(imageFields),\n      structure: processFieldSection(structureFields),\n      geo: processFieldSection(geoFields),\n      other: processFieldSection(otherFields)\n    }\n\n    // return ifd.fields\n    //   .map((field) => processField(field))\n    //   .filter((field) => field !== null)\n    //   .sort((a, b) => {\n    //     return a.name > b.name ? 1 : -1\n    //   })\n  })\n}\n\nconst processFieldSection = (fields) => {\n  return fields\n    .map((field) => processField(field))\n    .filter((field) => field !== null)\n    .sort((a, b) => {\n      return a.name > b.name ? 1 : -1\n    })\n}\n\n//Process a single IFD field into the form needed for display\nconst processField = (field) => {\n  console.log(field.id, field.name)\n  //Ignore certain fields\n  const ignoredTags = [\n    'Exif IFD',\n    'GeoKeyDirectoryTag',\n    'GeoAsciiParamsTag',\n    'GeoDoubleParamsTag',\n  ]\n  if (ignoredTags.includes(field.name)) {\n    return null\n  }\n\n  //Set the sf for numbers\n  const sf = 4\n\n  //Get the name and data\n  let name = field.name || `Unknown Key : ${field.id}`\n  name = name.replace(\"GeoKey\", \"\").replace(\"Tag\", \"\")\n  const data = prettyFormatData(field.data)\n\n  //Set defaults for expandable and shortString\n  let expandable = false\n  let shortString = field.enumValue || field.data\n\n  //Undefined\n  if (field.data === undefined || field.data === null) {\n    shortString = 'None'\n  }\n\n  //Strings\n  else if (typeof field.data === typeof '' && field.data.length > 18) {\n    expandable = true\n    shortString = `${field.data.length} char string`\n  }\n\n  //Objects\n  else if (isObject(field.data)) {\n    expandable = true\n    shortString = `${JSON.stringify(field.data).length} char JSON`\n  }\n\n  //Numbers\n  else if (\n    typeof field.data === 'number' &&\n    `${field.data}`.includes('.') &&\n    `${field.data}`.length > sf\n  ) {\n    expandable = true\n    shortString = `${toPrecision(field.data, sf)} to ${sf}sf`\n  }\n\n  //Arrays\n  else if (Array.isArray(field.data)) {\n    //If all values are the same\n    if (field.data.every((val, i, arr) => val === arr[0])) {\n      expandable = false\n      shortString = `${field.data.length} x [${field.data[0]}]`\n    }\n\n    //If values are different\n    else {\n      expandable = true\n      shortString = `${field.data.length} values`\n    }\n  }\n\n  return {\n    name,\n    data,\n    expandable,\n    shortString,\n    isGeoKey: field.isGeoKey,\n  }\n}\n\nconst prettyFormatData = (data) => {\n  //Empty data\n  if (!data) {\n    return 'None'\n  }\n\n  //Array data\n  if (Array.isArray(data)) {\n    return data.join('<br />')\n  }\n\n  //Object\n  if (isObject(data)) {\n    return JSON.stringify(data)\n  }\n\n  //String\n  if (typeof data === typeof \"\") {\n    //Convert element brackets to unicode\n    return data.replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\")\n  }\n\n  //Any other\n  return data\n}\n\nconst GeodeMetadataStore = derived(GeodeStore, ($GeodeStore, set) => {\n  processData($GeodeStore.rawData, set)\n})\n\nexport { GeodeMetadataStore }\n","<script>\n  export let field\n  export let isExpanded\n  export let onToggle\n\n  const fieldClicked = () => {\n    if (field.expandable) {\n      onToggle(field.name)\n    }\n  }\n</script>\n\n{#if field}\n  <li\n    class=\"relative flex flex-col h-10 overflow-hidden cursor-pointer text-xs\n    text-gray-700 even:bg-gray-100 {isExpanded ? ' h-auto' : ' '}\n    \">\n    <div\n      class=\"w-full flex flex-shrink-0 justify-between h-10 items-center\"\n      on:click={fieldClicked}>\n      <div class=\"flex items-center\">\n        <span\n          class=\"w-8 flex items-center justify-center {field.expandable ? 'opacity-100' : 'opacity-25'}\">\n          {#if isExpanded}▼{:else}▶{/if}\n        </span>\n        <span class=\"\">{field.name}</span>\n      </div>\n      <span class=\"text-right pr-3 font-light\" title={field.data}>\n        {field.shortString}\n      </span>\n    </div>\n    {#if isExpanded}\n      <div class=\"flex-1 flex\">\n        <div\n          class=\"w-8 h-auto bg-gray-200 border-r border-gray-300 flex-shrink-0\n          hover:bg-gray-100\"\n          title={'collapse'}\n          on:click={fieldClicked} />\n        <span\n          class=\"p-1 break-words bg-gray-100 w-full cursor-text select-text\n          overflow-hidden\">\n          {@html field.data}\n        </span>\n      </div>\n    {/if}\n  </li>\n{/if}\n","<script>\n  import MetadataItem from './MetadataItem.svelte'\n\n  export let sectionName\n  export let fields\n  export let expandedField\n  export let onToggle\n\n  $: console.log(fields)\n</script>\n\n{#if fields.length > 0}\n  <h3\n    class=\"pl-4 h-8 flex flex-col justify-center font-semibold text-gray-100\n    text-xs bg-teal-800 rounded-sm z-10\">\n    {sectionName}\n  </h3>\n  <ul class=\"\">\n    {#each fields as field}\n      <MetadataItem\n        {field}\n        isExpanded={expandedField === field.name}\n        {onToggle} />\n    {/each}\n  </ul>\n{/if}","<script>\n  import { GeodeMetadataStore } from '../../stores/GeodeMetadataStore'\n  import { GeodeBandStore } from '../../stores/GeodeBandStore'\n  import MetadataKeySection from './MetadataKeySection.svelte'\n  import Spinner from '../Spinner.svelte'\n\n  //Store the name of the currenty expanded field, if any\n  let expandedField = null\n\n  //Set the sections\n  let keySections = ['Geo', 'Image', 'Structure', 'Other']\n\n  //Toggle the currently expanded field\n  const toggleSelectedField = fieldName => {\n    if (expandedField === fieldName) {\n      expandedField = null\n    } else {\n      expandedField = fieldName\n    }\n  }\n</script>\n\n<div class=\"flex-1 p-3 pr-1 pb-0 overflow-hidden flex flex-col\">\n  {#if !$GeodeMetadataStore.ifdFields}\n    <div class=\"flex w-full h-full items-center justify-center\">\n      <Spinner size={12}/>\n    </div>\n  {:else}\n    <span class=\"h-8 font-semibold text-teal-700 text-sm flex-shrink-0 \">\n      Tags\n    </span>\n    <div class=\"w-full flex-1 flex flex-col overflow-hidden\">\n      <div class=\"flex-1 overflow-x-hidden overflow-y-scroll select-none pr-2\">\n        {#each keySections as keySection}\n          <MetadataKeySection\n            sectionName={keySection}\n            fields={$GeodeMetadataStore.ifdFields[$GeodeBandStore.currentBandIndex][keySection.toLowerCase()]}\n            {expandedField}\n            onToggle={toggleSelectedField} />\n        {/each}\n      </div>\n    </div>\n  {/if}\n</div>\n","const kIsNodeJS = Object.prototype.toString.call(typeof process !== 'undefined' ? process : 0) === '[object process]';\nconst kRequire = kIsNodeJS && typeof module.require === 'function' ? module.require : null; // eslint-disable-line\n\nexport function createInlineWorkerFactory(fn, sourcemap = null) {\n    const source = fn.toString();\n    const start = source.indexOf('\\n', 10) + 1;\n    const end = source.indexOf('}', source.length - 1);\n    const body = source.substring(start, end) + (sourcemap ? `\\/\\/# sourceMappingURL=${sourcemap}` : '');\n    const blankPrefixLength = body.search(/\\S/);\n    const lines = body.split('\\n').map(line => line.substring(blankPrefixLength) + '\\n');\n\n    if (kRequire) {\n        /* node.js */\n        const Worker = kRequire('worker_threads').Worker; // eslint-disable-line\n        const concat = lines.join('\\n');\n        return function WorkerFactory(options) {\n            return new Worker(concat, Object.assign({}, options, { eval: true }));\n        };\n    }\n\n    /* browser */\n    const blob = new Blob(lines, { type: 'application/javascript' });\n    const url = URL.createObjectURL(blob);\n    return function WorkerFactory(options) {\n        return new Worker(url, options);\n    };\n}\n\nexport function createURLWorkerFactory(url) {\n    if (kRequire) {\n        /* node.js */\n        const Worker = kRequire('worker_threads').Worker; // eslint-disable-line\n        return function WorkerFactory(options) {\n            return new Worker(url, options);\n        };\n    }\n    /* browser */\n    return function WorkerFactory(options) {\n        return new Worker(url, options);\n    };\n}\n\nexport function browserDecodeBase64(base64, enableUnicode) {\n    const binaryString = atob(base64);\n    if (enableUnicode) {\n        const binaryView = new Uint8Array(binaryString.length);\n        Array.prototype.forEach.call(binaryView, (el, idx, arr) => {\n            arr[idx] = binaryString.charCodeAt(idx);\n        });\n        return String.fromCharCode.apply(null, new Uint16Array(binaryView.buffer));\n    }\n    return binaryString;\n}\n\nexport function nodeDecodeBase64(base64, enableUnicode) {\n    return Buffer.from(base64, 'base64').toString(enableUnicode ? 'utf16' : 'utf8');\n}\n\nexport function createBase64WorkerFactory(base64, sourcemap = null, enableUnicode = false) {\n    const source = kIsNodeJS ? nodeDecodeBase64(base64, enableUnicode) : browserDecodeBase64(base64, enableUnicode);\n    const start = source.indexOf('\\n', 10) + 1;\n    const body = source.substring(start) + (sourcemap ? `\\/\\/# sourceMappingURL=${sourcemap}` : '');\n\n    if (kRequire) {\n        /* node.js */\n        const Worker = kRequire('worker_threads').Worker; // eslint-disable-line\n        return function WorkerFactory(options) {\n            return new Worker(body, Object.assign({}, options, { eval: true }));\n        };\n    }\n\n    /* browser */\n    const blob = new Blob([body], { type: 'application/javascript' });\n    const url = URL.createObjectURL(blob);\n    return function WorkerFactory(options) {\n        return new Worker(url, options);\n    };\n}\n","import { get } from 'svelte/store'\nimport { GeodeStore } from '../stores/GeodeStore.js'\nimport { GeodeProcessorState} from './GeodeProcessorState'\nimport GeodeWW from 'web-worker:./GeodeWW.js'\n\n\n//Setup the web worker\nconst geodeWorker = new GeodeWW()\ngeodeWorker.onmessage = function(e) {\n  //Get the result\n  console.log(\"GeodeProcessor : Got result\")\n  const result = e.data\n\n  setTimeout(()=>{\n    GeodeStore.setRawData(result.data)\n    GeodeStore.setProcessorState(GeodeProcessorState.IDLE)\n  }, 1000)\n}\n\nconst onNewFileSelected = (newFile) => {\n  //If we're already loading, tell the processor to stop \n  if (get(GeodeStore).processorState !== GeodeProcessorState.IDLE) {\n    console.log(\"Already processing a file. Cleaning up...\")\n    stopProcessingAndProcessNewFile(newFile)\n    return\n  }\n\n  //Reset the store\n  GeodeStore.reset()\n\n  //Add the file to the store\n  GeodeStore.setFile(newFile)\n\n  //Set the loading state\n  GeodeStore.setProcessorState(GeodeProcessorState.HEADER_LOAD)\n\n  //Trigger the processing start\n  console.log(\"Starting processing\")\n  geodeWorker.postMessage(newFile)\n\n}\n\nconst stopProcessingAndProcessNewFile = (newFile) => {\n\n  //TODO : Cleanup any processing and wait for the go ahead\n  setTimeout(() => {\n\n    //Set the loading state\n    GeodeStore.setProcessorState(GeodeProcessorState.IDLE)\n    console.log('Processing stopped')\n    onNewFileSelected(newFile)\n  }, 500)\n}\n\nexport { onNewFileSelected, GeodeProcessorState }","<script>\n  import Header from './components/Header.svelte'\n  import DropZone, { showFileBrowser } from './components/DropZone.svelte'\n  import StartScreen from './components/StartScreen.svelte'\n  import FileLayout from './components/FileLayout.svelte'\n  import Footer from './components/Footer.svelte'\n\n  import { GeodeStore } from './stores/GeodeStore.js'\n  import { onNewFileSelected } from './processor/GeodeProcessor'\n</script>\n\n<main class=\"w-full h-full\">\n  <div class=\"flex flex-col h-full\">\n    <Header onLoadButtonPressed={(showFileBrowser)} />\n    <div class=\"w-full flex-1 overflow-hidden relative\">\n      <DropZone \n          onFileSelected={onNewFileSelected}\n        >\n      </DropZone>\n      {#if $GeodeStore.file === null}\n        <StartScreen />\n      {:else}\n        <FileLayout />\n      {/if}\n    </div>\n    <Footer />\n  </div>\n</main>\n","import App from './App.svelte';\nimport \"./tailwind.css\";\n\nconst app = new App({\n\ttarget: document.body,\n});\n\nexport default app;"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","subscribe","store","callbacks","unsub","unsubscribe","component_subscribe","component","callback","$$","on_destroy","push","create_slot","definition","ctx","$$scope","slot_ctx","get_slot_context","tar","src","k","assign","slice","get_slot_changes","dirty","lets","undefined","merged","len","Math","max","length","i","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","d","element","name","document","createElement","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","set_data","current_component","set_current_component","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","flushing","seen_callbacks","Set","flush","update","pop","has","add","clear","fragment","before_update","p","after_update","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","create_component","mount_component","on_mount","m","new_on_destroy","map","filter","destroy_component","make_dirty","then","fill","init","instance","create_fragment","not_equal","props","parent_component","prop_values","bound","context","Map","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","[object Object]","this","$destroy","type","index","indexOf","splice","onLoadButtonPressed","showFileBrowser","e","preventDefault","stopPropagation","getElementById","click","loading","errorMessage","onFileSelected","allowedType","fileNotValid","isDropping","preventDefaults","setIsDroppingFromEvent","state","dropzoneClasses","files","dataTransfer","subscriber_queue","writable","start","stop","subscribers","set","new_value","run_queue","s","invalidate","subscriber","derived","stores","initial_value","single","isArray","stores_array","auto","inited","values","pending","cleanup","sync","result","unsubscribers","GeodeProcessorState","geodeStoreDefaults","file","processorState","rawData","GeodeStore","updateWrapper","field","setFile","setProcessorState","setRawData","reset","createGeodeStore","interactionMessage","isMobile","window","navigator","MaxTouchPoints","msMaxTouchPoints","mobile","$GeodeStore","desktop","CurrentBandIndex","GeodeBandStore","$CurrentBandIndex","bandCount","ifds","currentBandIndex","setBandIndex","newIndex","n","createGeodeBandStore","size","isObject","constructor","geodeMetadataStoreDefaults","ifdFields","processFields","ifd","imageIDs","structureIDs","geoTiffIDs","imageFields","fields","includes","id","structureFields","geoFields","isGeoKey","otherFields","image","processFieldSection","structure","geo","other","processField","sort","console","log","replace","prettyFormatData","expandable","shortString","enumValue","x","JSON","stringify","Number","parseFloat","toPrecision","every","val","arr","join","GeodeMetadataStore","processData","isExpanded","onToggle","sectionName","expandedField","toLowerCase","fieldName","kIsNodeJS","prototype","toString","call","process","kRequire","module","require","geodeWorker","base64","sourcemap","enableUnicode","source","Buffer","nodeDecodeBase64","binaryString","atob","binaryView","Uint8Array","el","idx","charCodeAt","String","fromCharCode","apply","Uint16Array","buffer","browserDecodeBase64","body","substring","Worker","eval","blob","Blob","url","URL","createObjectURL","onmessage","setTimeout","onNewFileSelected","newFile","_","get","stopProcessingAndProcessNewFile","postMessage"],"mappings":"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"}